---
- name: set fact force_install to no
  set_fact: force_install=no

- name: set fact force_install to yes
  set_fact: force_install=yes
  when: es_allow_downgrades

- name: Gracefully stop and remove elasticsearch package if switching between OSS and standard
  become: yes
  block:
  - name: Check if the elasticsearch package is installed
    shell: "dpkg-query -W -f'${Status}' {{ es_other_package_name }}"
    register: elasticsearch_package
    failed_when: False
    changed_when: False
    check_mode: no

  - name: unhold elasticsearch package when switching to a different package type
    become: yes
    dpkg_selections:
      name: "{{ es_other_package_name }}"
      selection: "install"
    when: elasticsearch_package.stdout == 'install ok installed'

  - name: stop elasticsearch
    service:
      name: 'elasticsearch'
      state: stopped
    when: elasticsearch_package.stdout == 'install ok installed'

  - name: Debian - Remove elasticsearch package if we are switching to a different package type
    apt:
      name: '{{ es_other_package_name }}'
      state: absent
    when: elasticsearch_package.stdout == 'install ok installed'


- name: Install Elasticsearch repository
  when: es_use_repository
  become: yes
  block:
  - name: Debian - Install apt-transport-https to support https APT downloads
    apt:
      name: apt-transport-https
      state: present
      update_cache: true

  - name: Debian - Add Elasticsearch repository key
    apt_key:
      url: '{{ es_apt_key }}'
      id: '{{ es_apt_key_id }}'
      state: present
    when: es_add_repository and es_apt_key | string

  - name: Debian - Add elasticsearch repository
    apt_repository:
      repo: '{{ item.repo }}'
      state: '{{ item.state }}'
    when: es_add_repository
    with_items:
      - { repo: "{{ es_apt_url_old }}", state: "absent" }
      - { repo: "{{ es_apt_url }}", state: "present" }
      - { repo: "{{ es_other_apt_url }}", state: "absent" }

- name: Include optional user and group creation.
  when: (es_user_id is defined) and (es_group_id is defined)
  import_tasks: elasticsearch-optional-user.yml

- name: Debian - Get installed elasticsearch version
  command: dpkg-query --showformat='${Version}' --show {{ es_package_name }}
  register: installed_es_version
  failed_when: False
  changed_when: False
  check_mode: no

- name: Debian - Ensure elasticsearch is installed
  become: yes
  apt:
    name: '{{ es_package_name }}{% if es_version is defined and es_version != "" %}={{ es_version }}{% endif %}'
    state: present
    force: '{{ force_install }}'
    allow_unauthenticated: "{{ 'no' if es_apt_key else 'yes' }}"
    cache_valid_time: 86400
  when: es_use_repository
  register: debian_elasticsearch_install_from_repo
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"

- name: Debian - hold elasticsearch version
  become: yes
  dpkg_selections:
    name: "{{ es_package_name }}"
    selection: "hold"
  when: es_version_lock

# workaround due to https://github.com/ansible/ansible/issues/66977
- set_fact:
    es_deb_url: "{% if es_version is version('7.0.0', '>=') %}{{ es_package_url }}-{{ es_version }}-amd64.deb{% else %}{{ es_package_url }}-{{ es_version }}.deb{% endif %}"

- name: Debian - Install Elasticsearch from url
  become: yes
  apt:
    deb: "{% if es_custom_package_url is defined %}{{ es_custom_package_url }}{% else %}{{ es_deb_url }}{% endif %}"
    state: present
  when: not es_use_repository
  register: elasticsearch_install_from_package
  notify: restart elasticsearch
  environment:
    ES_PATH_CONF: "{{ es_conf_dir }}"

- name: Install kibana
  apt:
    name: "kibana={{ es_version }}"
    state: present

- name: copy kibana config
  copy:
    src: kibana.yml
    dest: /etc/kibana/kibana.yml
    owner: "root"
    group: "kibana"
    mode: 0660
  register: new_kibana_config

- name: restart kibana if new config
  service: name=kibana state=restarted enabled=yes  
  when: new_kibana_config.changed == "true"

- name: Install logstash
  apt:
    name: logstash
    state: present

- name: reload systemd configuration
  become: yes
  systemd:
    daemon_reload: true

- name: enable logstash
  service:
    name: logstash
    enabled: yes

- name: enable elasticsearch
  service:
    name: elasticsearch
    enabled: yes

- name: enable kibana
  service:
    name: kibana
    enabled: yes

- name: start logstash
  service:
    name: logstash
    state: started

- name: start elasticsearch
  service:
    name: elasticsearch
    state: started

- name: start kibana
  service:
    name: kibana
    state: started